{"ast":null,"code":"/**\n * The CSS transform order following the upcoming spec from CSSWG\n * translate => rotate => scale => skew\n * @see https://drafts.csswg.org/css-transforms-2/#ctm\n * @see https://www.stefanjudis.com/blog/order-in-css-transformation-transform-functions-vs-individual-transforms/\n */\nvar transformTemplate = [\"rotate(var(--chakra-rotate, 0))\", \"scaleX(var(--chakra-scale-x, 1))\", \"scaleY(var(--chakra-scale-y, 1))\", \"skewX(var(--chakra-skew-x, 0))\", \"skewY(var(--chakra-skew-y, 0))\"];\nexport function getTransformTemplate() {\n  return [\"translateX(var(--chakra-translate-x, 0))\", \"translateY(var(--chakra-translate-y, 0))\", ...transformTemplate].join(\" \");\n}\nexport function getTransformGpuTemplate() {\n  return [\"translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)\", ...transformTemplate].join(\" \");\n}","map":{"version":3,"sources":["../../../src/create-theme-vars/transform-template.ts"],"names":["transformTemplate"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMA,iBAAiB,GAAG,CAAA,iCAAA,EAAA,kCAAA,EAAA,kCAAA,EAAA,gCAAA,EAA1B,gCAA0B,CAA1B;AAQA,OAAO,SAAA,oBAAA,GAAgC;AACrC,SAAO,CAAA,0CAAA,EAAA,0CAAA,EAGL,GAHK,iBAAA,EAAA,IAAA,CAAP,GAAO,CAAP;AAKD;AAED,OAAO,SAAA,uBAAA,GAAmC;AACxC,SAAO,CAAA,4EAAA,EAEL,GAFK,iBAAA,EAAA,IAAA,CAAP,GAAO,CAAP;AAID","sourcesContent":["/**\n * The CSS transform order following the upcoming spec from CSSWG\n * translate => rotate => scale => skew\n * @see https://drafts.csswg.org/css-transforms-2/#ctm\n * @see https://www.stefanjudis.com/blog/order-in-css-transformation-transform-functions-vs-individual-transforms/\n */\nconst transformTemplate = [\n  \"rotate(var(--chakra-rotate, 0))\",\n  \"scaleX(var(--chakra-scale-x, 1))\",\n  \"scaleY(var(--chakra-scale-y, 1))\",\n  \"skewX(var(--chakra-skew-x, 0))\",\n  \"skewY(var(--chakra-skew-y, 0))\",\n]\n\nexport function getTransformTemplate() {\n  return [\n    \"translateX(var(--chakra-translate-x, 0))\",\n    \"translateY(var(--chakra-translate-y, 0))\",\n    ...transformTemplate,\n  ].join(\" \")\n}\n\nexport function getTransformGpuTemplate() {\n  return [\n    \"translate3d(var(--chakra-translate-x, 0), var(--chakra-translate-y, 0), 0)\",\n    ...transformTemplate,\n  ].join(\" \")\n}\n"]},"metadata":{},"sourceType":"module"}